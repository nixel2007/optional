#Использовать ".."
#Использовать asserts
#Использовать "./ТестМодуль"

&Тест
Процедура КогдаСоздаетсяОбъектИзНеопределено_ТогдаКонструкторБросаетИсключение() Экспорт
	
	// Дано
	Объект = Неопределено;
	
	ИсключениеБрошено = Ложь;
	СообщениеОбОшибке = "";
	
	// Когда
	Попытка
		Опциональный = Новый Опциональный(Объект);
	Исключение
		ИсключениеБрошено = Истина;
		СообщениеОбОшибке = ОписаниеОшибки();
	КонецПопытки;
	
	// Тогда
	Ожидаем.Что(ИсключениеБрошено, "Было брошено исключение")
	.ЭтоИстина();
	Ожидаем.Что(СообщениеОбОшибке, "Текст исключения корректен")
	.Содержит("Хранимое значение является Неопределено");
	
КонецПроцедуры

&Тест
Процедура КогдаСоздаетсяОбъектИзНеопределено_ИНеопределеноДопустимо_ТогдаКонструкторНеБросаетИсключение() Экспорт
	
	// Дано
	Объект = Неопределено;
	ДопустимоНеопределено = Истина;
	
	// Когда
	Опциональный = Новый Опциональный(Объект, ДопустимоНеопределено);
	
	// Тогда
	Ожидаем.Что(Опциональный).Не_().ЭтоНеопределено();
	
КонецПроцедуры

&Тест
Процедура КогдаСоздаетсяОбъектИзНеопределено_ТогдаОпциональныйПустой() Экспорт
	
	// Дано
	Объект = Неопределено;
	ДопустимоНеопределено = Истина;
	
	// Когда
	Опциональный = Новый Опциональный(Объект, ДопустимоНеопределено);
	
	// Тогда
	Ожидаем.Что(Опциональный.Пустой()).ЭтоИстина();
	Ожидаем.Что(Опциональный.СодержитЗначение()).ЭтоЛожь();
	
КонецПроцедуры

&Тест
Процедура КогдаСоздаетсяОбъект_ТогдаОпциональныйНеПустой() Экспорт
	
	// Дано
	Объект = "";
	ДопустимоНеопределено = Ложь;
	
	// Когда
	Опциональный = Новый Опциональный(Объект, ДопустимоНеопределено);
	
	// Тогда
	Ожидаем.Что(Опциональный.Пустой()).ЭтоЛожь();
	Ожидаем.Что(Опциональный.СодержитЗначение()).ЭтоИстина();
	
КонецПроцедуры

&Тест
Процедура КогдаХранитОбъект_ТогдаВозвращаетЕго() Экспорт
	
	// Дано
	Объект = "123";
	Опциональный = Новый Опциональный(Объект);
	
	// Когда
	ХранимыйОбъект = Опциональный.Получить();
	
	// Тогда
	Ожидаем.Что(ХранимыйОбъект).Равно(Объект);
	
КонецПроцедуры

&Тест
Процедура КогдаХранитНеопределено_ТогдаБросаетИсключениеПриПолучении() Экспорт
	
	// Дано
	Объект = Неопределено;
	ДопустимоНеопределено = Истина;
	Опциональный = Новый Опциональный(Объект, ДопустимоНеопределено);
	
	// Когда
	Ожидаем.Что(Опциональный).Метод("Получить").ВыбрасываетИсключение("Неопределено");
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ТогдаВыполняетЛямбдаВыражение() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	Опциональный.ЕслиСодержитЗначение("Значение -> ТестМодуль.Параметр = Значение + 1");
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ТогдаВыполняетДействие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	Опциональный.ЕслиСодержитЗначение(Новый Действие(ЭтотОбъект, "ДействиеЕслиСодержитЗначение"));
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаВызываетсяОбработать_ТогдаВозвращаетНовыйОпциональныйСоЗначениемОбработки_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	ВторойОпциональный = Опциональный.Обработать("Значение -> Значение + 1");
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаВызываетсяОбработать_ТогдаВозвращаетНовыйОпциональныйСоЗначениемОбработки_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	ВторойОпциональный = Опциональный.Обработать(Новый Действие(ЭтотОбъект, "ДействиеОбработать"));
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаВызываетсяОбработатьНаПустомОпциональном_ТогдаВозвращаетСебя() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);
	
	// Когда
	ВторойОпциональный = Опциональный.Обработать("Значение -> Ложь");
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Пустой()).ЭтоИстина();
	
КонецПроцедуры

&Тест
Процедура КогдаФильтрацияУспешная_ТогдаВозвращаетЭтотОбъект_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	ВторойОпциональный = Опциональный.Фильтровать("Значение -> Значение = 1");
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(1);
	
КонецПроцедуры

&Тест
Процедура КогдаФильтрацияУспешная_ТогдаВозвращаетЭтотОбъект_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	ВторойОпциональный = Опциональный.Фильтровать(Новый Действие(ЭтотОбъект, "ДействиеФильтрации"));
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(1);
	
КонецПроцедуры

&Тест
Процедура КогдаФильтрацияНеУспешная_ТогдаВозвращаетПустойОпциональный_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(2);
	
	// Когда
	ВторойОпциональный = Опциональный.Фильтровать("Значение -> Значение = 1");
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Пустой()).ЭтоИстина();
	
КонецПроцедуры

&Тест
Процедура КогдаФильтрацияНеУспешная_ТогдаВозвращаетПустойОпциональный_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(2);
	
	// Когда
	ВторойОпциональный = Опциональный.Фильтровать(Новый Действие(ЭтотОбъект, "ДействиеФильтрации"));
	
	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Пустой()).ЭтоИстина();
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ИВызываетсяЕслиИначе_ТогдаОбрабатываетЗначение_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	Опциональный.ЕслиСодержитЗначениеИначе(
		"Значение -> ТестМодуль.Параметр = Значение + 1",
		"() -> 3"
	);
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(2);

КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ИВызываетсяЕслиИначе_ТогдаОбрабатываетЗначение_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);
	
	// Когда
	Опциональный.ЕслиСодержитЗначениеИначе(
		Новый Действие(ЭтотОбъект, "ДействиеЕслиСодержитЗначение"),
		Новый Действие(ЭтотОбъект, "ДействиеЕслиСодержитЗначениеИначе")
	);
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(2);

КонецПроцедуры

&Тест
Процедура КогдаПустой_ИВызываетсяЕслиИначе_ТогдаОбрабатываетЗначение_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);
	
	// Когда
	Опциональный.ЕслиСодержитЗначениеИначе(
		"Значение -> ТестМодуль.Параметр = Значение + 1",
		"() -> ТестМодуль.Параметр = 3"
	);
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(3);

КонецПроцедуры

&Тест
Процедура КогдаПустой_ИВызываетсяЕслиИначе_ТогдаОбрабатываетЗначение_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);
	
	// Когда
	Опциональный.ЕслиСодержитЗначениеИначе(
		Новый Действие(ЭтотОбъект, "ДействиеЕслиСодержитЗначение"),
		Новый Действие(ЭтотОбъект, "ДействиеЕслиСодержитЗначениеИначе")
	);
	
	// Тогда
	Ожидаем.Что(ТестМодуль.Параметр).Равно(3);

КонецПроцедуры

&Тест
Процедура КогдаВызываетсяФункцияРазвертки_ТогдаВозвращаетсяНовыйОпциональный_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);

	// Когда
	ВторойОпциональный = Опциональный.Развернуть("Значение -> Новый Опциональный(Значение + 1)");

	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);

КонецПроцедуры

&Тест
Процедура КогдаВызываетсяФункцияРазвертки_ТогдаВозвращаетсяНовыйОпциональный_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);

	// Когда
	ВторойОпциональный = Опциональный.Развернуть(Новый Действие(ЭтотОбъект, "ДействиеРазвертки"));

	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);

КонецПроцедуры

&Тест
Процедура КогдаПустой_ИВызываетсяФункцияРазвертки_ТогдаВозвращаетсяПустойОпциональный() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	ВторойОпциональный = Опциональный.Развернуть("Значение -> Новый Опциональный(Значение + 1)");

	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Пустой()).ЭтоИстина();
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ИВызываетсяИли_ТогдаВозвращаетсяСебя() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);

	// Когда
	ВторойОпциональный = Опциональный.Или_("() -> 2");

	// Тогда
	Ожидаем.Что(ВторойОпциональный).Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(1);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ИВызываетсяИли_ТогдаВозвращаетсяРезультатОбработки_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	ВторойОпциональный = Опциональный.Или_("() -> 2");

	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ИВызываетсяИли_ТогдаВозвращаетсяРезультатОбработки_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	ВторойОпциональный = Опциональный.Или_(Новый Действие(ЭтотОбъект, "ДействиеИли"));

	// Тогда
	Ожидаем.Что(ВторойОпциональный).НЕ_().Равно(Опциональный);
	Ожидаем.Что(ВторойОпциональный.Получить()).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ТогдаВозвращаетЗаполненныйПроцессорКоллекций() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(1);

	// Когда
	ПроцессорКоллекций = Опциональный.ПроцессорКоллекций();

	// Тогда
	Ожидаем.Что(ПроцессорКоллекций).НЕ_().ЭтоНеопределено();
	Ожидаем.Что(ПроцессорКоллекций.Количество()).Равно(1);
	Ожидаем.Что(ПроцессорКоллекций.ПолучитьПервый()).Равно(1);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ТогдаВозвращаетПустойПроцессорКоллекций() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	ПроцессорКоллекций = Опциональный.ПроцессорКоллекций();

	// Тогда
	Ожидаем.Что(ПроцессорКоллекций).НЕ_().ЭтоНеопределено();
	Ожидаем.Что(ПроцессорКоллекций.Количество()).Равно(0);
	
КонецПроцедуры


&Тест
Процедура КогдаСодержитЗначение_ТогдаМетодИначеВозвращаетСебя() Экспорт
	
	// Дано
	Объект = Новый Структура;
	Опциональный = Новый Опциональный(Объект);

	// Когда
	Значение = Опциональный.Иначе_(2);

	// Тогда
	Ожидаем.Что(Значение).Равно(Объект);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ТогдаМетодИначеВозвращаетЗначениеИначе() Экспорт
	
	// Дано
	Объект = Неопределено;
	Опциональный = Новый Опциональный(Объект, Истина);

	// Когда
	ОбъектИначе = Новый Структура;
	Значение = Опциональный.Иначе_(ОбъектИначе);

	// Тогда
	Ожидаем.Что(Значение).НЕ_().Равно(Объект);
	Ожидаем.Что(Значение).Равно(ОбъектИначе);
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ТогдаМетодИначеПолучитьВозвращаетСебя() Экспорт
	
	// Дано
	Объект = Новый Структура;
	Опциональный = Новый Опциональный(Объект);

	// Когда
	Значение = Опциональный.ИначеПолучить("() -> 2");

	// Тогда
	Ожидаем.Что(Значение).Равно(Объект);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ТогдаМетодИначеПолучитьВозвращаетРезультатОбработкиИначе_Лямбда() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	Значение = Опциональный.ИначеПолучить("() -> 2");

	// Тогда
	Ожидаем.Что(Значение).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ТогдаМетодИначеПолучитьВозвращаетРезультатОбработкиИначе_Действие() Экспорт
	
	// Дано
	Опциональный = Новый Опциональный(Неопределено, Истина);

	// Когда
	Значение = Опциональный.ИначеПолучить(Новый Действие(ЭтотОбъект, "ДействиеИли"));

	// Тогда
	Ожидаем.Что(Значение).Равно(2);
	
КонецПроцедуры

&Тест
Процедура КогдаСодержитЗначение_ТогдаМетодИначеВызватьИсключениеВозвращаетСебя() Экспорт
	
	// Дано
	Объект = Новый Структура;
	Опциональный = Новый Опциональный(Объект);

	// Когда
	Значение = Опциональный.ИначеВызватьИсключение(Новый ИнформацияОбОшибке("Текст", Неопределено));

	// Тогда
	Ожидаем.Что(Значение).Равно(Объект);
	
КонецПроцедуры

&Тест
Процедура КогдаПустой_ТогдаМетодИначеВызватьИсключениеВыбрасываетИсключение() Экспорт
	
	// Кокгда
	Объект = Неопределено;
	Опциональный = Новый Опциональный(Объект, Истина);
	
	ИнформацияОбОшибке = Новый ИнформацияОбОшибке("Мое исключение", Неопределено);
	ПараметрыМетода = Новый Массив;
	ПараметрыМетода.Добавить(ИнформацияОбОшибке);

	// Тогда
	Ожидаем.Что(Опциональный).Метод("ИначеВызватьИсключение", ПараметрыМетода).ВыбрасываетИсключение("Мое исключение");

КонецПроцедуры

Процедура ДействиеЕслиСодержитЗначение(Значение) Экспорт
	ТестМодуль.Параметр = Значение + 1;
КонецПроцедуры

Процедура ДействиеЕслиСодержитЗначениеИначе() Экспорт
	ТестМодуль.Параметр = 3;
КонецПроцедуры

Функция ДействиеОбработать(Значение) Экспорт
	Возврат Значение + 1;
КонецФункции

Функция ДействиеФильтрации(Значение) Экспорт
	Возврат Значение = 1;
КонецФункции

Функция ДействиеРазвертки(Значение) Экспорт
	Возврат Новый Опциональный(Значение + 1);
КонецФункции

Функция ДействиеИли() Экспорт
	Возврат 2;
КонецФункции
